# -*- coding: utf-8 -*-
"""
Django settings for config project.

Generated by 'django-admin startproject' using Django 2.2.4.

For more information on this file, see
https://docs.djangoproject.com/en/2.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/2.2/ref/settings/
"""

import os
from pathlib import Path

from django.urls import reverse_lazy


from django.contrib.messages import constants as messages


MESSAGE_TAGS = {
        messages.DEBUG: 'alert-secondary',
        messages.INFO: 'alert-info',
        messages.SUCCESS: 'alert-success',
        messages.WARNING: 'alert-warning',
        messages.ERROR: 'alert-danger',
}

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/2.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'nxbt(-1(#@54=3mj$wcipto5_+wk2d*!m2wq(6tmknm+6(i%%6'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['*']

# ALLOWED_HOSTS = ['.vercel.app']

INTERNAL_IPS = [
    # ...
    "127.0.0.1",
    # ...
]

# New in Python 3.x
DEFAULT_AUTO_FIELD = 'django.db.models.AutoField'

# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    "django.contrib.humanize",
    'users',
    "crispy_forms",
    "crispy_bootstrap5",
    'django_filters',
    'asset_app',
    "debug_toolbar",
    "isis",
    "supplier",
    "warehouse",
    "stock",
    'cities_light',
    'bank',
    'costumer',
    'rosetta',
]

SITE_ID = 1

# django-cities-light Configure filters to exclude data you don't want
CITIES_LIGHT_TRANSLATION_LANGUAGES = ['pt', 'en']
CITIES_LIGHT_INCLUDE_COUNTRIES = ['MZ']
# CITIES_LIGHT_INCLUDE_CITY_TYPES = ['PPL', 'PPLA', 'PPLA2', 'PPLA3', 'PPLA4', 'PPLC', 'PPLF', 'PPLG', 'PPLL', 'PPLR', 'PPLS', 'STLMT',]


AUTH_USER_MODEL = 'users.User'

MIDDLEWARE = [
    "debug_toolbar.middleware.DebugToolbarMiddleware",
    'django.middleware.security.SecurityMiddleware',
    'django.middleware.locale.LocaleMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',    
]

AUTHENTICATION_BACKENDS = (
    'django.contrib.auth.backends.ModelBackend',
)

HAYSTACK_CONNECTIONS = {
    'default': {
        'ENGINE': 'haystack.backends.simple_backend.SimpleEngine',
    },
}

ROOT_URLCONF = 'config.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [BASE_DIR, 'templates'],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

# AUTHENTICATION_BACKENDS = ('django.contrib.auth.backends.ModelBackend',)

WSGI_APPLICATION = 'config.wsgi.application'


# Database
# https://docs.djangoproject.com/en/2.2/ref/settings/#databases

# DATABASES = {}

DATABASES = {
    'default': {
        'ENGINE': 'mysql.connector.django',
        'NAME': 'data4',
        'USER': 'root',
        'PASSWORD': 'abc123@123',
        'PORT': '3306',
        'OPTIONS': {
        'autocommit': True,
        },
    }
}


# Password validation
# https://docs.djangoproject.com/en/2.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

# Internationalization
# https://docs.djangoproject.com/en/2.2/topics/i18n/

LANGUAGES = [
('pt', 'PortuguÃªs'),
('en', 'English'),    
]

LANGUAGE_CODE = 'pt'

LOCALE_PATHS = [
    os.path.join(BASE_DIR, 'locale'),
    os.path.join(BASE_DIR, 'asset_app\\locale'),
    os.path.join(BASE_DIR, 'bank\\locale'),
    os.path.join(BASE_DIR, 'isis\\locale'),
    os.path.join(BASE_DIR, 'stock\\locale'),
    os.path.join(BASE_DIR, 'supplier\\locale'),
    os.path.join(BASE_DIR, 'warehouse\\locale'),
    os.path.join(BASE_DIR, 'users\\locale'),
    os.path.join(BASE_DIR, 'costumer\\locale'),
]

TIME_ZONE = 'Etc/GMT+2'

USE_I18N = True

USE_L10N = True

USE_TZ = True

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/2.1/howto/static-files/


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/2.1/howto/static-files/

# DEV AND PROD
STATIC_URL = '/static/'

# This one is used in development
# STATIC_ROOT = os.path.join(BASE_DIR, "static")

# This one is used in production
# STATIC_ROOT = '/home/pambuzac/public_html/static'

# This one is used in development
STATIC_ROOT = os.path.join(BASE_DIR, '/static')

STATICFILES_DIRS = [
os.path.join(BASE_DIR, "static"),
]

print(STATIC_ROOT, BASE_DIR)

# DEV AND PROD
MEDIA_URL = '/media/'

# This one is used in production
# MEDIA_ROOT = '/home/pambuzac/public_html/media'

# This one is used in development
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')

# django-crispy will use bootstrap5
CRISPY_ALLOWED_TEMPLATE_PACKS = "bootstrap5"
CRISPY_TEMPLATE_PACK = "bootstrap5"

# LOGOUT_REDIRECT_URL = '/'
LOGIN_URL = 'users:login'